/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var c=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var E=Object.getOwnPropertyNames;var x=Object.prototype.hasOwnProperty;var v=(n,s)=>{for(var e in s)c(n,e,{get:s[e],enumerable:!0})},I=(n,s,e,t)=>{if(s&&typeof s=="object"||typeof s=="function")for(let i of E(s))!x.call(n,i)&&i!==e&&c(n,i,{get:()=>s[i],enumerable:!(t=C(s,i))||t.enumerable});return n};var w=n=>I(c({},"__esModule",{value:!0}),n);var T={};v(T,{default:()=>p});module.exports=w(T);var o=require("obsidian"),f={},p=class extends o.Plugin{async onload(){await this.loadAllData(),this.app.workspace.onLayoutReady(()=>this.initData()),this.registerEvent(this.app.workspace.on("file-menu",(e,t)=>{e.addItem(i=>{let r=t.extension==null?"Folder":"File",l="Set "+r+" Color";i.setTitle(l).setIcon("palette").onClick(async()=>{new h(this.app,this,t.path,r).open()})})}))}onunload(){}getData(){return this.data}getSettings(){return this.data.settings}addItemColor(e,t){this.getData()[e]={itemColor:t},this.saveAllData();let i=this.findFileElement(e);i&&this.applyItemColor(i.el,t)}getItemColor(e){let t=this.getData()[e];if(t)return t.itemColor}removeItemColor(e){delete this.getData()[e],this.saveAllData();let t=this.findFileElement(e);t&&this.applyItemColor(t.el,"inherit")}async loadAllData(){let e=await this.loadData();e&&Object.entries(f).forEach(([t,i])=>{e.settings[t]==null&&(e.settings[t]=i)}),this.data=Object.assign({settings:{...f}},{},e)}async saveAllData(){await this.saveData(this.data)}findFileElement(e){let t=this.app.workspace.getLeavesOfType("file-explorer"),i;for(let r of t)i=r.view.fileItems[e];return i}applyItemColor(e,t){e.setCssProps({"--current-color":t})}initData(){let e=this.app.workspace.getLeavesOfType("file-explorer"),t=Object.entries(this.data);for(let i of e)for(let[r,l]of t){let a=i.view.fileItems[r];a&&l.itemColor&&this.applyItemColor(a.el,l.itemColor||"inherit")}}},h=class extends o.Modal{constructor(e,t,i,r){super(e);this.plugin=t,this.path=i,this.itemType=r,this.userColor=this.plugin.getItemColor(this.path),this.modalEl.classList.add("explorer-colors-color-picker-modal"),this.titleEl.setText("Change color");let l=this.contentEl.createDiv({cls:"picker-container"});l.createEl("p",{text:"Select a color for this "+this.itemType,cls:"picker-description"});let a=new o.ColorComponent(l);a.setValue(this.userColor||"#000000").onChange(u=>{this.userColor=u});let g=this.contentEl.createDiv({cls:"footer-container"}),d=new o.ButtonComponent(g);d.setButtonText("Reset"),d.onClick(()=>{a.setValue("#000000"),this.userColor=void 0});let m=new o.ButtonComponent(g);m.setButtonText("Save"),m.onClick(()=>{new o.Notice(this.itemType+" color changed"),this.userColor?this.plugin.addItemColor(this.path,this.userColor):this.plugin.removeItemColor(this.path),this.close()})}onOpen(){super.onOpen()}onClose(){let{contentEl:e}=this;e.empty()}};

/* nosourcemap */